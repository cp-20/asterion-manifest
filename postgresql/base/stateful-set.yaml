apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: postgresql
spec:
  serviceName: postgresql-headless
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:16
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-password
                  key: root
            - name: POSTGRES_PASSWORD_TRAQING
              valueFrom:
                secretKeyRef:
                  name: postgresql-password
                  key: traqing
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |
                    psql -U postgres -h localhost -c "
                      DO \$\$
                      BEGIN
                          IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'traqing') THEN
                              CREATE DATABASE traqing;
                          END IF;
                      END
                      \$\$;
                      DO \$\$
                      BEGIN
                          IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = 'traqing') THEN
                              CREATE USER traqing WITH ENCRYPTED PASSWORD '${POSTGRES_PASSWORD_TRAQING}';
                          END IF;
                      END
                      \$\$;
                      GRANT ALL PRIVILEGES ON DATABASE traqing TO traqing;"
          resources:
            limits:
              memory: '1024Mi'
              cpu: '1000m'
            requests:
              memory: '512Mi'
              cpu: '500m'
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-data
